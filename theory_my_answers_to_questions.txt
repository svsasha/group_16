1. Что подразумевается под тестовой средой?
    Тестовая среда - это окружение, в котором работает команда тестировщиков. Здесь выполняются регрессионные проверки и проверки функционала. 
Тестовая среда – это настройка ПО для тестирования.

2. В чем отличие build от release?

Build — это "сборка". Т.е. билд — это версия ПО, которую разработчики передают тестировщикам. Сборки происходят до релиза.
А Release - это версия ПО, которая передается заказчику после завершения этапов разработки и тестирования.

3. Основные фазы тестирования?

Пре-альфа: Это «сырая» версия продукта. Период времени со старта разработки до выхода стадии Альфа. Может включать в себя
 не весь спектр функциональных возможностей программы.

Альфа: На этой стадии начинается тестирование программы в целом тестировщиками. Есть возможность добавлять новые функциональные
возможности. Как правило, это происходит внутри организации, разрабатывающей продукт.

Бета: ПО проверено и выпущено ограниченному числу пользователей (как правило, вне организации). С целью получить необходимые
отзывы и замечания от клиентов о продукте для дальнейшего анализа, доработки и исправлении ошибок ПО.

Релиз-кандидат: На основе отзывов бета-тестирования, вносятся необходимые изменения в ПО, исправляются все найденные ошибки.
Релиз-кандидат также выставляется общественности.

Выпуск: На этом этапе происходит публичный выпуск ПО. Выпуск считается стабильным.

4. Что такое импакт анализ?

Импакт анализ применяется программистами для улучшения тестирования. Это указание программистами затронутых мест в проекте 
при разработке новой функциональности или внесении изменений в старую. Позволяет уменьшить 
затраты времени и ресурсов на тестирование, значительно повышая его эффективность.

5. Критерии выбора тестов?
Требования к идеальному критерию тестирования:
• Критерий должен быть достаточным;
• Критерий должен быть полным;
• Критерий должен быть надежным;
• Критерий должен быть легко проверяемым.

Существуют классы критериев тестирования, например:
структурные критерии, функциональные критерии, мутационные критерии и т.д... 
Структурные критерии используют модель программы в виде "белого ящика", что предполагает знание исходного текста программы или спецификации программы.
Функциональные критерии – обеспечивают контроль степени выполнения требований заказчика в программном продукте. Отражают взаимодействие тестируемого приложения с окружением. Преимущественно используется модель "черного ящика".

С помощью критериев тестирования мы можем добиться в той или иной степени того, что мы ждём от конечного продукта.

6. Принципы тестирования

- Тестирование демонстрирует наличие дефектов. Тесты показывают наличие дефектов в ПО, но они не могут доказать их отсутствие. 

- Исчерпывающее тестирование недостижимо. Невозможно выполнить такое тестирование, которое покроет все комбинации входных параметров пользователя и состояния системы ПО (за исключением самых простых случаев). Нужно обязательно предварительно разрабатывать стратегию тестирования продукта.

- Раннее тестирование. Процесс тестирования должен начаться как можно раньше и должен достичь определенных целей. Чем раньше обнаружен дефект, тем быстрее, проще и дешевле его исправить. Также огромным преимуществом раннего тестирования является экономия времени. 

- Скопление/кластеризация дефектов. Разные системные модули могут содержать разное количество дефектов – а именно, плотность дефектов в разных элементах системы может быть разной. Нужно проводить анализ причин скопления дефектов по разным системным модулям. А также распределять тестирование пропорционально фактической плотности дефектов.

- Парадокс пестицида. Со временем, когда тесты применяются множество раз, они находят все меньше и меньше новых дефектов. И, следовательно, становятся неэффективными для данного продукта. Необходимо регулярно пересматривать существующие и создавать новые тест-кейсы.

- Тестирование зависит от контекста. Тестирование выполняется по-разному, в зависимости от контекста. Выбор методологии, техники и вида тестирования напрямую зависит от того, какой продукт мы тестируем, каким является предназначение данного ПО. К примеру, банковское ПО требует более тщательной проверки, чем компьютерная игра.

- Заблуждение об отсутствии ошибок. Если тестирование ПО не выявило дефектов, это еще не означает, что данный продукт готов к выходу. Нахождение багов будет бесполезной процедурой, если система неудобна и не соответствует нуждам и ожиданиям пользователей.




